'use client'
import { useEffect, useState, useRef } from 'react'
import { supabase } from '@/lib/supabaseClient'

type Row = {
  id: string
  event_date: string
  title: string
  description?: string
  tags?: string[]
  image_url?: string | null
  year?: number
}

export default function TimelinePublic() {
  const [rows, setRows] = useState<Row[]>([])
  const wrapRef = useRef<HTMLDivElement>(null)

  useEffect(() => {
    (async () => {
      const { data } = await supabase
        .from('timeline')
        .select('*')
        .order('event_date', { ascending: true })
      setRows((data as Row[]) || [])
    })()
  }, [])

  function scrollBy(px: number) {
    wrapRef.current?.scrollBy({ left: px, behavior: 'smooth' })
  }

  return (
    <main className="container" style={{ padding: '24px 20px' }}>
      <h1 style={{marginBottom:8}}>Zaman Çizelgesi</h1>
      <p className="muted" style={{marginBottom:16}}>Yıllara göre yaptıklarım</p>

      <div style={{position:'relative'}}>
        <button aria-label="Geri" onClick={()=>scrollBy(-600)} style={btnStyle}>&larr;</button>
        <button aria-label="İleri" onClick={()=>scrollBy(600)} style={{...btnStyle, right:0}}>&rarr;</button>

        <div
          ref={wrapRef}
          style={{
            display:'flex',
            gap:16,
            overflowX:'auto',
            scrollSnapType:'x mandatory',
            paddingBottom:12,
          }}
        >
          {rows.map((r) => (
            <article
              key={r.id}
              style={cardStyle}
              className="tl-card"
            >
              {/* eslint-disable-next-line @next/next/no-img-element */}
              {r.image_url && <img src={r.image_url} alt="" style={{width:'100%', height:160, objectFit:'cover', borderRadius:12, marginBottom:10}} />}
              <div style={{fontSize:12, opacity:.8, marginBottom:6}}>
                {new Date(r.event_date).toLocaleDateString('tr-TR')}
              </div>
              <h3 style={{margin:'0 0 6px'}}>{r.title}</h3>
              {r.description && <p className="muted" style={{margin:0}}>{r.description}</p>}
              {r.tags && r.tags.length > 0 && (
                <div style={{display:'flex', gap:6, flexWrap:'wrap', marginTop:8}}>
                  {r.tags.map((t,i)=><span key={i} style={tagStyle}>#{t}</span>)}
                </div>
              )}
            </article>
          ))}
        </div>
      </div>

      <style jsx global>{`
        .tl-card {
          transition: transform .25s ease, box-shadow .25s ease, background .25s ease;
        }
        .tl-card:hover {
          transform: translateY(-4px) scale(1.02);
          box-shadow: 0 12px 30px rgba(0,0,0,.35);
          background: rgba(255,255,255,.06);
        }
      `}</style>
    </main>
  )
}

const cardStyle: React.CSSProperties = {
  minWidth: 300,
  scrollSnapAlign: 'start',
  background: 'rgba(255,255,255,.04)',
  border: '1px solid rgba(255,255,255,.08)',
  borderRadius: 16,
  padding: 16,
}

const tagStyle: React.CSSProperties = {
  fontSize: 12,
  border: '1px solid rgba(255,255,255,.15)',
  padding: '2px 8px',
  borderRadius: 999,
  opacity: .85
}

const btnStyle: React.CSSProperties = {
  position:'absolute',
  top:'calc(50% - 18px)',
  left:0,
  zIndex:1,
  border:'1px solid rgba(255,255,255,.2)',
  background:'rgba(2,6,23,.6)',
  backdropFilter:'blur(6px)',
  color:'white',
  borderRadius:12,
  width:36,
  height:36,
  cursor:'pointer'
}
